name: Build and Deploy QuickFIX

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.12']

    steps:
      - name: Checkout quickfix-binary repository
        uses: actions/checkout@v4
        with:
          repository: wxcuop/quickfix-binary
          ref: main
          path: quickfix-binary

      - name: Unzip source
        run: Expand-Archive -Path quickfix-1.15.1_src.zip -DestinationPath ./quickfix-src

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup MSVC
        uses: microsoft/setup-msbuild@v2

      - name: Ensure Visual Studio 2019 is installed
        run: |
          choco install visualstudio2019buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools --includeRecommended --includeOptional"
          choco install vswhere

      - name: Install OpenSSL
        run: |
          choco install openssl
          echo $env:INCLUDE
          echo $env:LIB

      - name: Set OpenSSL Environment Variables
        run: |
          $opensslPath = "C:\Program Files\OpenSSL"
          echo "INCLUDE=$opensslPath\include" >> $env:GITHUB_ENV
          echo "LIB=$opensslPath\lib" >> $env:GITHUB_ENV

      - name: Verify OpenSSL Installation
        run: |
          openssl version

      - name: Locate Visual Studio 2019
        id: locate-vs
        run: |
          $vsPath = & "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath
          echo "##vso[task.setvariable variable=vs_path]$vsPath"

      - name: Build QuickFIX
        run: |
          mkdir build
          cd build
          cmake -DHAVE_SSL=ON -G "Visual Studio 15 2017 Win64" -DCMAKE_INSTALL_PREFIX:PATH="install-path" -DOPENSSL_ROOT_DIR="C:\Program Files\OpenSSL"
          cmake --build . --config Release

      - name: Build Python Wheel
        run: |
          cd quickfix-src  # Ensure this path is correct
          python setup.py bdist_wheel

      - name: Install Wheel (Optional)
        run: |
          pip install dist/*.whl
