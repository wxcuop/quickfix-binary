name: Build and Deploy QuickFIX

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.12']

    steps:
      - name: Checkout QuickFIX master branch
        uses: actions/checkout@v4
        with:
          repository: quickfix/quickfix
          ref: master

      - name: Checkout quickfix-binary repository
        uses: actions/checkout@v4
        with:
          repository: wxcuop/quickfix-binary
          ref: main
          path: quickfix-binary

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup MSVC
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel cibuildwheel

      - name: Ensure Visual Studio 2019 is installed
        run: |
          choco install visualstudio2019buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools --includeRecommended --includeOptional"
          choco install vswhere

      - name: Locate Visual Studio 2019
        id: locate-vs
        run: |
          $vsPath = & "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath
          echo "##vso[task.setvariable variable=vs_path]$vsPath"

      - name: Configure QuickFIX
        run: |
          cd src
          echo '#define HAVE_STLPORT 1' >> config_windows.h
          echo '#define HAVE_ODBC 1' >> config_windows.h
          echo '#define HAVE_MYSQL 1' >> config_windows.h
          echo '#define HAVE_POSTGRESQL 1' >> config_windows.h

      - name: Build QuickFIX
        run: |
          $env:PATH += ";${{ steps.locate-vs.outputs.vs_path }}\MSBuild\Current\Bin"
          mkdir build
          cd build
          cmake -G "Visual Studio 16 2019" -A x64 -DHAVE_SSL=ON -DCMAKE_INSTALL_PREFIX="C:/quickfix" ..
          cmake --build . --config Release
          cmake --install .

      - name: Copy LICENSE file
        run: cp quickfix/LICENSE quickfix-binary/

      - name: Build wheel
        env:
          CIBW_BUILD: cp312-win_amd64
          CIBW_BEFORE_BUILD: pip install cmake
        run: |
          cd quickfix-binary
          python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name
